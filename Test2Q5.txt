First:
   E, a, :=, B1, B, A, *, +, (, )
 E 0100000000
 a 0000000000
:= 0000000000
B1 0000100000
 B 0100010000
 A 0100000010
 * 0000000000
 + 0000000000
 ( 0000000000
 ) 0000000000
Last:
   E, a, :=, B1, B, A, *, +, (, )
 E 0001000000
 a 0000000000
:= 0000000000
B1 0000100000
 B 0100100000
 A 0100000001
 * 0000000000
 + 0000000000
 ( 0000000000
 ) 0000000000
Within:
   E, a, :=, B1, B, A, *, +, (, )
 E 0000000000
 a 0010000000
:= 0001000000
B1 0000000001
 B 0000000000
 A 0000001100
 * 0000100000
 + 0000100000
 ( 0001000000
 ) 0000000000
First+ ::= warshall(first)
   E, a, :=, B1, B, A, *, +, (, )
 E 0100000000
 a 0000000000
:= 0000000000
B1 0100110010
 B 0100010010
 A 0100000010
 * 0000000000
 + 0000000000
 ( 0000000000
 ) 0000000000
Last+ ::= warshall(last)
   E, a, :=, B1, B, A, *, +, (, )
 E 0101100000
 a 0000000000
:= 0000000000
B1 0100100000
 B 0100100000
 A 0100000001
 * 0000000000
 + 0000000000
 ( 0000000000
 ) 0000000000
First* ::= Identity | pFirst
   E, a, :=, B1, B, A, *, +, (, )
 E 1100000000
 a 0100000000
:= 0010000000
B1 0101110010
 B 0100110010
 A 0100010010
 * 0000001000
 + 0000000100
 ( 0000000010
 ) 0000000001
Yield Precedence ::= within & pFirst
   E, a, :=, B1, B, A, *, +, (, )
 E 0000000000
 a 0000000000
:= 0100110010
B1 0000000000
 B 0000000000
 A 0000000000
 * 0100010010
 + 0100010010
 ( 0100110010
 ) 0000000000
Take Precedence ::= transpose(pLast) & within & sFirst
   E, a, :=, B1, B, A, *, +, (, )
 E 0000000000
 a 0000001101
:= 0000000000
B1 0000000000
 B 0000000001
 A 0000000000
 * 0000000000
 + 0000000000
 ( 0000000000
 ) 0000001100
Result ::= yPrec | (2 * within) | (4 * tPrec)
   E, a, :=, B1, B, A, *, +, (, )
 E 0000000000
 a 0020004404
:= 0102110010
B1 0000000002
 B 0000000004
 A 0000002200
 * 0100210010
 + 0100210010
 ( 0102110010
 ) 0000004400
