CLASS $CLASS
LargestCommonDenominator $Pgmident
{ $LB
CONST $CONST
M $Constident
= $assign
7 $integer
, $comma
N $Constident
= $assign
85 $integer
; $semi
VAR $VAR
X $Varident
, $comma
Y $Varident
, $comma
Z $Varident
, $comma
Q $Varident
, $comma
R $Varident
; $semi
PROCEDURE $PROCEDURE
Multiply $Procident
( $LP
) $RP
{ $LB
VAR $VAR
A $Varident
, $comma
B $Varident
; $semi
A $ident
= $assign
X $ident
; $semi
B $ident
= $assign
Y $ident
; $semi
Z $ident
= $assign
0 $integer
; $semi
WHILE $WHILE
B $ident
> $relop
0 $integer
DO $DO
{ $LB
IF $IF
ODD $ODD
B $ident
THEN $THEN
Z $ident
= $assign
Z $ident
+ $addop
A $ident
; $semi
A $ident
= $assign
2 $integer
* $mop
A $ident
; $semi
B $ident
= $assign
B $ident
/ $mop
2 $integer
; $semi
} $RB
PRINT $PRINT
A $ident
; $semi
PRINT $PRINT
B $ident
; $semi
} $RB
PROCEDURE $PROCEDURE
Divide $Procident
( $LP
) $RP
{ $LB
VAR $VAR
W $Varident
; $semi
R $ident
= $assign
X $ident
; $semi
Q $ident
= $assign
0 $integer
; $semi
W $ident
= $assign
Y $ident
; $semi
WHILE $WHILE
W $ident
<= $relop
R $ident
DO $DO
W $ident
= $assign
2 $integer
* $mop
W $ident
; $semi
WHILE $WHILE
W $ident
> $relop
Y $ident
DO $DO
{ $LB
Q $ident
= $assign
2 $integer
* $mop
Q $ident
; $semi
W $ident
= $assign
W $ident
/ $mop
2 $integer
; $semi
IF $IF
W $ident
<= $relop
R $ident
THEN $THEN
{ $LB
R $ident
= $assign
R $ident
- $addop
W $ident
; $semi
Q $ident
= $assign
Q $ident
+ $addop
1 $integer
; $semi
} $RB
} $RB
} $RB
PROCEDURE $PROCEDURE
GCD $Procident
( $LP
) $RP
{ $LB
VAR $VAR
F $Varident
, $comma
G $Varident
; $semi
F $ident
= $assign
X $ident
; $semi
G $ident
= $assign
Y $ident
; $semi
WHILE $WHILE
F $ident
!= $relop
G $ident
DO $DO
{ $LB
IF $IF
F $ident
< $relop
G $ident
THEN $THEN
G $ident
= $assign
G $ident
- $addop
F $ident
; $semi
IF $IF
G $ident
< $relop
F $ident
THEN $THEN
F $ident
= $assign
F $ident
- $addop
G $ident
; $semi
} $RB
Z $ident
= $assign
F $ident
; $semi
PRINT $PRINT
Z $ident
; $semi
PRINT $PRINT
F $ident
; $semi
PRINT $PRINT
G $ident
; $semi
} $RB
X $ident
= $assign
M $ident
; $semi
Y $ident
= $assign
N $ident
; $semi
CALL $CALL
Multiply $Procident
( $LP
) $RP
; $semi
GET $GET
X $ident
; $semi
GET $GET
Y $ident
; $semi
CALL $CALL
Divide $Procident
( $LP
) $RP
; $semi
PRINT $PRINT
W $ident
; $semi
PRINT $PRINT
Q $ident
; $semi
PRINT $PRINT
R $ident
; $semi
GET $GET
X $ident
; $semi
GET $GET
Y $ident
; $semi
CALL $CALL
GCD $Procident
( $LP
) $RP
; $semi
} $RB
